# Application configuration
spring.application.name=logistics-identity-service

# Server configuration
server.port=8085
server.servlet.context-path=/identity

# Database configuration
#spring.datasource.url=${db.url}
#spring.datasource.username=${db.username}
#spring.datasource.password=${db.password}

spring.datasource.url=jdbc:postgresql://localhost:5432/identity_service_db
spring.datasource.username=identity_user
spring.datasource.password=tranleduy
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.data.jpa.auditor-aware-ref=auditorAwareImpl
spring.data.web.pageable.default-page-size=10
spring.data.web.pageable.max-page-size=50
spring.data.web.sort.default-order=desc

# JWT configuration
jwt.secret-key="1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
jwt.expired-time=86400
jwt.issuer=com.tdtu.logistics
jwt.refresh-signer-key="!xJ4TQ3s!Adn-u/8Pgne9hR?W9K1vV=-K33qgiJjq3fxXx?lBMDanJDkjvHIdrYx"
jwt.refresh-expiration=864000

# Swagger configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/swagger-ui/identity-services.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

#
## Vault configuration
#spring.cloud.vault.uri=http://localhost:8200
#spring.cloud.vault.authentication=token
#spring.cloud.vault.token=${VAULT_TOKEN}
#spring.cloud.vault.scheme=http
#
## Key-Value (KV) configuration
#spring.cloud.vault.kv.enabled=true
#spring.cloud.vault.kv.version=1  # KV version 1
#spring.cloud.vault.kv.application-name=identity-service
#spring.cloud.vault.kv.backend=secret
#
## Import Vault config
#spring.config.import=vault://