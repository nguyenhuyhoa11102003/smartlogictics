plugins {
	id 'java' // Standard Java plugin for compiling and building Java projects
	id 'org.springframework.boot' version '3.3.0' // Spring Boot plugin to build Spring Boot applications
	id 'io.spring.dependency-management' version '1.1.6' // Manages dependencies for Spring projects
}

group = 'com.tdtu' // Your group ID for the project
version = '0.0.1-SNAPSHOT' // Project version

// Java configuration to specify the Java version (Java 17 in this case)
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor // Ensures annotation processor is used during compilation
	}
}

// Repositories for dependency resolution
repositories {
	mavenCentral() // Central repository for Maven artifacts
	maven { url 'https://repo.spring.io/milestone' } // Spring milestone repository
}

ext {
	set('springCloudVersion', "2023.0.3") // Defining Spring Cloud version for easier updates
}

// Dependencies section where libraries are specified
dependencies {
	// Core Spring Boot starters
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA for database operations
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation support for Java beans
	implementation 'org.springframework.boot:spring-boot-starter-web' // Web support for REST APIs
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // OAuth2 resource server support
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // Spring Boot actuator for monitoring and management

	// JSON support
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310' // Jackson support for JSR-310 (LocalDate, LocalTime, etc.)

	// Lombok for reducing boilerplate code
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MapStruct for mapping DTOs and entities
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	// OpenFeign for making HTTP requests
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// OpenAPI support for generating and displaying API docs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// Database driver and persistence
	implementation 'mysql:mysql-connector-java:8.0.28' // MySQL connector
	implementation 'jakarta.persistence:jakarta.persistence-api' // Jakarta Persistence API (JPA)

	// ModelMapper for object mapping
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// Gson for JSON parsing
	implementation 'com.google.code.gson:gson:2.8.9'

	// Bean Validation API
	implementation 'javax.validation:validation-api:2.0.1.Final'


	// Spring Cloud dependencies
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot test starter
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit platform for running tests
}

// Dependency management using Spring Cloud BOM (Bill of Materials)
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" // Spring Cloud dependencies BOM
	}
}

// Configure test tasks to use JUnit Platform
tasks.named('test') {
	useJUnitPlatform() // Ensures JUnit tests use JUnit 5 platform
}
