  
services:
  identity-db:
    image: postgres:latest
    container_name: identity-db
    environment:
      POSTGRES_DB: identity_service_db
      POSTGRES_USER: identity_user
      POSTGRES_PASSWORD: tranleduy
    ports:
      - "5432:5432" # Expose PostgreSQL for identity-service on localhost
    volumes:
      - identity-db-data:/var/lib/postgresql/data # Persist identity-service data

  order-db:
    image: postgres:latest
    container_name: order-db
    environment:
      POSTGRES_DB: order_service_db
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: tranleduy
    ports:
      - "5433:5432" # Expose PostgreSQL for order-service on localhost
    volumes:
      - order-db-data:/var/lib/postgresql/data # Persist order-service data

#  kafka:
#    image: 'bitnami/kafka:3.7.0'
#    container_name: kafka
#    hostname: kafka
#    ports:
#      - '9094:9094'
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

#  redis-cache:
#    image: redis:7.0-alpine
#    container_name: redis-cache
#    ports:
#      - "6379:6379"           # Expose Redis on localhost
#    volumes:
#      - redis-data:/var/lib/redis/data       # Persist Redis data

  vault:
    image: hashicorp/vault:1.18 # Updated image
    container_name: vault
    ports:
      - "8200:8200" # Expose Vault on localhost
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=tranleduy # Set the root token for Vault

    command: server -dev -dev-root-token-id=tranleduy

    volumes:
      - vault-data:/vault/file # Persist Vault data


  mysqlcontainer:
    image: mysql:latest
    restart: always
    container_name: mysqlcontainer
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: root
      MYSQL_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - yas-network
  phpmyadmin:
      image: phpmyadmin
      restart: always
      ports:
        - "8888:80"
      environment:
        - PMA_ARBITRARY=1
      networks:
        - yas-network

volumes:
  identity-db-data:
    driver: local
  order-db-data: # ThÃªm volume cho order-db
    driver: local
  vault-data:
    driver: local
  mysql_data:
#  redis-data:
#    driver: local


networks:
  yas-network:
    driver: bridge
    name: yas-network


